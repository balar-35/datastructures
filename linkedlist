public class linked {
	    Node head;
	    class Node {
	        int data;
	        Node next;

	        Node(int val) {
	            data = val;
	            next = null;
	        }
	    }
	    public linked() {
	        head = null;
	    }
	    public void insertAtBegin(int val) {
	        Node newNode = new Node(val);
	        if (head == null) {
	            head = newNode;
	        } else {
	            Node temp = head;
	            newNode.next = temp;
	            head = newNode;
	        }
	    }
	    public void insertAtPosition(int val, int position) {
	        Node newNode = new Node(val);
	        if (position == 0) { 
	            insertAtBegin(val);
	            return;
	        }

	        Node temp = head;
	        for (int i = 0; temp != null && i < position - 1; i++) {
	            temp = temp.next;
	        }
	        if (temp == null) {
	            System.out.println("Position out of bounds");
	            return;
	        }
            newNode.next = temp.next;
	        temp.next = newNode;
	    }
	    public void display() {
	        Node temp = head;
	        while (temp != null) {
	            System.out.print(temp.data + " ");
	            temp = temp.next;
	        }
	        System.out.println();
	    }
	    public static void main(String[] args) {
	    	linked list = new linked();
	        list.insertAtBegin(10);
	        list.insertAtBegin(20);
	        list.insertAtBegin(30);
	        list.insertAtBegin(40);
	        list.insertAtBegin(50);
	        list.insertAtBegin(60);
	        System.out.print("Original List: ");
	        list.display();
	        list.insertAtBegin(777);
	        list.insertAtPosition(333, 4);
	        System.out.print("Updated List: ");
	        list.display();
	    }
	}     
    


